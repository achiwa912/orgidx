#+TITLE: orgidx.py

A helper utility to generate =README.org= that has links to all your .org files under a top wiki folder.

** The idea - your private Wiki pages

I think you already know that you can create one or more private repositories in github.com for free.  Also, github.com renders *.org files nicely for preview.

If you use ~emacs~ + ~org-mode~ to write memos, articles, etc., github would be a great place to host your personal Wiki pages.  All you need is to create a private repository and push your =*.org= files to it.  You can browse =*.org= documents in a neatly formatted manner.  Actually, this README is an =.org= file itself.  You can see how it works.

But, one important piece is missing.  Navigating those =*.org= files on the github UI is clumsy.  I wish I had a (nicely formatted) top page (ie, README) that has links to =.org= files grouped by categories.  This is why, I created =orgidx.py=.

** Why you should have your private Wiki on github

- It is free
- It is your private space
- Can view/edit with multiple devices
- github renders =.org= (, =.md=, etc.) files for you to view

** How to organize *.org files

First, you need to prepare the top directory which contains all sub-directories and =.org= files.  Let's say it is =~/wiki=.  Create sub-directories under the top directory, for example, =python=, =linux=, =storage= and =etc=.  The names of these sub-directories will become categories (category keys, to be exact).  And then, place your =.org= files under the sub-directories.

You now have something like:
#+BEGIN_SRC
wiki +
     +- python +- list_comp.org
     |         +- async.org
     |         +- closure.org
     +- linux +- kernel.org
     |        +- boot.org
     |        +- filesystems.org
<snip>
#+END_SRC 

** What orgidx.py will do for you

Executing the script:
: python orgidx.py <wiki_top_direcory>
will traverse sub-directories and =.org= files in them, and generate =README.org= file.  Generating =README.org= on-the-fly means that you can add/remove/update articles, move your articless to different sub-directories, change sub-directory names(*), change the titles of your articles, and the script will reflect those updates.  How neat!

(*) Don't forget to upate ~config.json~ (see below)

If you have the above directory structure, the generated =README.org= will be something like:
: #+TITLE: Personal Wiki Index
: 
: My private memos.
: 
: ** Topics related to Python
: 
: - [[./python/list_comp.org][List comprehension memo]]
: - [[./python/async.org][Study on asyncio]]
: - [[./python/closure][Playing around with closures]]
: 
: ** Linux Hacks
: 
: - [[./linux/kernel.org][Linux kernel]]
: - [[./linux/boot.org][Linux boot sequence]]
: - [[./linux/filesystems.org][Filesystems (ext4, xfs, etc.)]]
: <snip>

The script loads a config file (~config.json~) from the target directory.  It has a title string of the README.org (ie, the ~#+TITLE~ key) and a dictionary (ie, other keys) that converts category keys (ie, sub-directory names) to category text strings (eg, "python" to "Topics related to Python").  Update this dictionary for better Wiki experience.  Please see =config_sample.json= uploaded to this repository.

The script creates a link to an =.org= file.  The text shown for the link is derived from the title (ie, ~#+TITLE:~) meta data of the document.  (So, an .org file needs to have at least the title metadta ~#+TITLE:~)

The above =README.org= file will be rendered by github like [[./example.org][this]].

** Usage

1. Create the top wiki directory (eg, =/home/jon/wiki=)
2. Create sub-directories whose names will be category keys
3. Place =.org= files under the sub-directories
   - Make sure all =.org= files have ~#+TITLE:~ meta data
4. Create and save =config.json= in the top wiki directory
   - If you don't, that's fine.  The names of sub-directories will be categories as-is
5. Install python 3.9 or later
6. Put orgidx.py somewhere you like
8. Run the script (eg, ~python orgidx.py /home/jon/wiki~)
9. =README.org= will be generated under the top wiki directory

** License

orgidx.py is under [[https://en.wikipedia.org/wiki/MIT_License][MIT License]].  Please feel free to use, file a bug, give me a comment, etc.

** Contact

Kyosuke Achiwa - @kyos_achwan - achiwa912+gmail.com (please replace ~+~ with ~@~)

Project Link: https://github.com/achiwa912/orgidx

